{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleName = toHaveAccessibleName;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _utils = require(\"./utils\");\nfunction toHaveAccessibleName(htmlElement, expectedAccessibleName) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleName, this);\n  const actualAccessibleName = (0, _domAccessibilityApi.computeAccessibleName)(htmlElement);\n  const missingExpectedValue = arguments.length === 1;\n  let pass = false;\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible name, whatever it may be.\n    pass = actualAccessibleName !== '';\n  } else {\n    pass = expectedAccessibleName instanceof RegExp ? expectedAccessibleName.test(actualAccessibleName) : this.equals(actualAccessibleName, expectedAccessibleName);\n  }\n  return {\n    pass,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.${toHaveAccessibleName.name}`, 'element', ''), `Expected element ${to} have accessible name`, expectedAccessibleName, 'Received', actualAccessibleName);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}