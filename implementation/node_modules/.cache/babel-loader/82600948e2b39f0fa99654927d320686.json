{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeInTheDocument = toBeInTheDocument;\nvar _utils = require(\"./utils\");\nfunction toBeInTheDocument(element) {\n  if (element !== null || !this.isNot) {\n    (0, _utils.checkHtmlElement)(element, toBeInTheDocument, this);\n  }\n  const pass = element === null ? false : element.ownerDocument === element.getRootNode({\n    composed: true\n  });\n  const errorFound = () => {\n    return `expected document not to contain element, found ${this.utils.stringify(element.cloneNode(true))} instead`;\n  };\n  const errorNotFound = () => {\n    return `element could not be found in the document`;\n  };\n  return {\n    pass,\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeInTheDocument`, 'element', ''), '',\n      // eslint-disable-next-line @babel/new-cap\n      this.utils.RECEIVED_COLOR(this.isNot ? errorFound() : errorNotFound())].join('\\n');\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}