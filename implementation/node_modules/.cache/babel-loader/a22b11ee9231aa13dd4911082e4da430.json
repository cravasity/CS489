{"ast":null,"code":"var _jsxFileName = \"/Users/juhyun/cs489/factdect/src/Publisher.js\";\nimport './Publisher.scss';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Publisher.scss';\nimport { useLocation } from 'react-router-dom';\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Detail = props => {\n  const row = props.row;\n  const title = row.title;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, title));\n};\nconst Doghnut = props => {\n  // const data_num = props.data_num;\n  const fact_num = props.fact_num;\n  const conv_num = props.conv_num;\n  const false_num = props.false_num;\n  // const fact_percent = props.fact;\n  // const conv_percent = props.conv;\n  // const false_percent = props.false;\n\n  const Data = {\n    labels: [\"fact\", \"conv\", \"false\"],\n    datasets: [{\n      data: [fact_num, conv_num, false_num],\n      backgroundColor: [\"#1B263B\", \"#415A77\", \"#778DA9\"],\n      borderColor: [\"#1B263B\", \"#415A77\", \"#778DA9\"],\n      radius: \"50%\"\n    }]\n  };\n  const Options = {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: Data,\n    options: Options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\nfunction Publisher() {\n  let location = useLocation();\n  {/* 이 페이지에 전달된 정보를 받겠다는 코드입니다 */}\n  {/* 아래 publisher 변수에는 Rank 페이지에서 클릭한 줄의 \"출판사\" 값이 전달됩니다. */}\n  const publisher = location.state.publisher;\n  {/* 정보가 dictionary 꼴로 전달된다고 생각하시면 편할 듯 합니다. { state : {key: value}} 형태로 data가 전달되기 때문에 알짜배기 데이터 값은 location.state.key에 저장됩니다. */}\n  const [rows, setRow] = useState(null);\n  const [numbers, setNumbers] = useState(null);\n  useEffect(() => {\n    axios.get('/get', {\n      params: {\n        input_pub: publisher\n      }\n    }).then(({\n      data\n    }) => {\n      setRow(data);\n    }).catch(e => {\n      console.error(e.stack);\n    });\n    axios.get('/pub-info', {\n      params: {\n        input_pub: publisher\n      }\n    }).then(({\n      data\n    }) => {\n      setNumbers(data);\n    }).catch(e => {\n      console.error(e.stack);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Publisher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, numbers && numbers.map((v, inx) => {\n    const json_n = JSON.parse(v);\n    const data_num = json_n.data_num;\n    const fact_num = json_n.fact_num;\n    const conv_num = json_n.conv_num;\n    const false_num = json_n.false_num;\n    const fact_percent = json_n.fact;\n    const conv_percent = json_n.conv;\n    const false_percent = json_n.false;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Doghnut, {\n      fact_num: fact_num,\n      conv_num: conv_num,\n      false_num: false_num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }));\n  }), rows && rows.map((v, inx) => {\n    const json_r = JSON.parse(v);\n    return /*#__PURE__*/React.createElement(Detail, {\n      key: inx,\n      row: json_r,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }\n    });\n  }));\n}\nexport default Publisher;","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","ChartJS","register","ArcElement","Tooltip","Legend","Detail","props","row","title","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Doghnut","fact_num","conv_num","false_num","Data","labels","datasets","data","backgroundColor","borderColor","radius","Options","class","Doughnut","options","Publisher","location","publisher","state","rows","setRow","numbers","setNumbers","get","params","input_pub","then","catch","e","console","error","stack","map","v","inx","json_n","JSON","parse","data_num","fact_percent","fact","conv_percent","conv","false_percent","false","json_r","key"],"sources":["/Users/juhyun/cs489/factdect/src/Publisher.js"],"sourcesContent":["import './Publisher.scss';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Publisher.scss';\nimport { useLocation } from 'react-router-dom';\n\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Detail = (props) => {\n    const row = props.row;\n    const title = row.title;   \n    return (\n      <div className=\"Detail\">\n        <div>{title}</div>\n      </div>\n    )\n}\n\nconst Doghnut = (props) => {\n  // const data_num = props.data_num;\n  const fact_num = props.fact_num;\n  const conv_num = props.conv_num;\n  const false_num = props.false_num;\n  // const fact_percent = props.fact;\n  // const conv_percent = props.conv;\n  // const false_percent = props.false;\n\n  const Data = {\n    labels: [\"fact\", \"conv\", \"false\"],\n    datasets: [\n      {\n        data: [fact_num, conv_num, false_num],\n        backgroundColor:[\"#1B263B\", \"#415A77\", \"#778DA9\"],\n        borderColor:[\"#1B263B\", \"#415A77\", \"#778DA9\"],\n        radius:\"50%\",\n      },\n    ],\n  }\n  const Options = {}\n\n  return(\n    <div class=\"chart\">\n      <Doughnut data={Data} options={Options}></Doughnut>\n    </div>\n  )\n}\n\nfunction Publisher() {\n    let location = useLocation(); {/* 이 페이지에 전달된 정보를 받겠다는 코드입니다 */}\n    {/* 아래 publisher 변수에는 Rank 페이지에서 클릭한 줄의 \"출판사\" 값이 전달됩니다. */}\n    const publisher = location.state.publisher; {/* 정보가 dictionary 꼴로 전달된다고 생각하시면 편할 듯 합니다. { state : {key: value}} 형태로 data가 전달되기 때문에 알짜배기 데이터 값은 location.state.key에 저장됩니다. */}\n\n    const [rows, setRow] = useState(null);\n    const [numbers, setNumbers] = useState(null);\n    \n\n    useEffect(() => {\n      axios.get('/get', {\n        params: {input_pub: publisher}\n      })\n      .then(({data}) => {\n          setRow(data);\n      })\n      .catch(e => {\n          console.error(e.stack);\n      });\n\n      axios.get('/pub-info', {\n        params: {input_pub: publisher}\n      })\n      .then(({data}) => {\n          setNumbers(data);\n      })\n      .catch(e => {\n          console.error(e.stack);\n      });\n\n    }, []);\n    return (\n      <div className=\"Publisher\">\n      {\n        numbers && numbers.map((v, inx) => {\n          const json_n = JSON.parse(v)\n\n          const data_num = json_n.data_num;\n          const fact_num = json_n.fact_num;\n          const conv_num = json_n.conv_num;\n          const false_num = json_n.false_num;\n          const fact_percent = json_n.fact;\n          const conv_percent = json_n.conv;\n          const false_percent = json_n.false;\n\n          return (\n            <div className=\"number_info\">\n              <Doghnut fact_num={fact_num} conv_num={conv_num} false_num={false_num} />\n            </div>\n          )\n        })\n      }\n      {\n        rows && rows.map((v, inx) => {\n            const json_r = JSON.parse(v)\n            return <Detail key={inx} row={json_r}/>\n        })\n    }\n      </div>\n    );\n  }\n  \n  export default Publisher;"],"mappings":"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"},"metadata":{},"sourceType":"module"}