{"ast":null,"code":"var _jsxFileName = \"/Users/juhyun/cs489/factdect/src/ListView.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Listview.css';\nconst NewsRow = props => {\n  // const title = props.results.title;\n  // const date = props.results.date;\n  // const link = props.results.link;\n\n  const publisher = props.percentages.publisher;\n  const fact = props.percentages.fact;\n  const conv = props.percentages.conv;\n  const fake = props.percentages.fake;\n  const fact_p = fact;\n  document.documentElement.style.setProperty('--width', fact_p);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \" \", fact_p, \" \")));\n};\nfunction ListView() {\n  const [datas, setDatas] = useState(null);\n  const [percentages, setPercent] = useState(null);\n  useEffect(() => {\n    // axios.get('/get-data')\n    // .then(({data}) => {\n    //     setDatas(data);\n    // })\n    // .catch(e => {\n    //     console.error(e.stack);\n    // });\n\n    axios.get('/percentage').then(({\n      data\n    }) => {\n      setPercent(data);\n    }).catch(e => {\n      console.error(e.stack);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, percentages && percentages.map((v, inx) => {\n    const json_p = JSON.parse(v);\n    return /*#__PURE__*/React.createElement(NewsRow, {\n      key: inx,\n      percentages: json_p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }\n    });\n  }));\n}\nexport default ListView;","map":{"version":3,"names":["React","useEffect","useState","axios","NewsRow","props","publisher","percentages","fact","conv","fake","fact_p","document","documentElement","style","setProperty","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","class","ListView","datas","setDatas","setPercent","get","then","data","catch","e","console","error","stack","className","map","v","inx","json_p","JSON","parse","key"],"sources":["/Users/juhyun/cs489/factdect/src/ListView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Listview.css';\n\nconst NewsRow = (props) => {\n    // const title = props.results.title;\n    // const date = props.results.date;\n    // const link = props.results.link;\n\n    const publisher = props.percentages.publisher;\n    const fact = props.percentages.fact;\n    const conv = props.percentages.conv;\n    const fake = props.percentages.fake;\n\n    const fact_p = fact;\n    document.documentElement.style.setProperty('--width', fact_p);\n\n    return (\n        <li>\n            {/* percentage 막대 그래프로 나타내기 (1) */}\n            <div class=\"progress-bar\">           \n                <div class=\"progress\"> {fact_p} </div>\n            </div>\n            {/* <div className=\"link\">\n                {fact}\n            </div> */}\n        </li>\n    );\n};\n\nfunction ListView() {\n  const [datas, setDatas] = useState(null);\n  const [percentages, setPercent] = useState(null);\n\n  useEffect(() => {\n    // axios.get('/get-data')\n    // .then(({data}) => {\n    //     setDatas(data);\n    // })\n    // .catch(e => {\n    //     console.error(e.stack);\n    // });\n\n    axios.get('/percentage')\n    .then(({data}) => {\n        setPercent(data);\n    })\n    .catch(e => {\n        console.error(e.stack);\n    });\n\n  }, []);\n  return (\n    <ul className='listView'>\n    {\n        percentages && percentages.map((v, inx) => {\n            const json_p = JSON.parse(v)\n            return <NewsRow key={inx} percentages={json_p}/>\n        })\n    }\n    </ul>\n  );\n}\n\nexport default ListView;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAEvB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB;EACA;EACA;;EAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,WAAW,CAACD,SAAS;EAC7C,MAAME,IAAI,GAAGH,KAAK,CAACE,WAAW,CAACC,IAAI;EACnC,MAAMC,IAAI,GAAGJ,KAAK,CAACE,WAAW,CAACE,IAAI;EACnC,MAAMC,IAAI,GAAGL,KAAK,CAACE,WAAW,CAACG,IAAI;EAEnC,MAAMC,MAAM,GAAGH,IAAI;EACnBI,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,SAAS,EAAEJ,MAAM,CAAC;EAE7D,oBACIX,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEItB,KAAA,CAAAgB,aAAA;IAAKO,KAAK,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBtB,KAAA,CAAAgB,aAAA;IAAKO,KAAK,EAAC,UAAU;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAC,EAACX,MAAM,EAAC,GAAM,CACpC,CAIL,CAAC;AAEb,CAAC;AAED,SAASa,QAAQA,CAAA,EAAG;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,WAAW,EAAEoB,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAE,KAAK,CAACyB,GAAG,CAAC,aAAa,CAAC,CACvBC,IAAI,CAAC,CAAC;MAACC;IAAI,CAAC,KAAK;MACdH,UAAU,CAACG,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;MACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,KAAK,CAAC;IAC1B,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEnC,KAAA,CAAAgB,aAAA;IAAIoB,SAAS,EAAC,UAAU;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEpBf,WAAW,IAAIA,WAAW,CAAC8B,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;IACvC,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC;IAC5B,oBAAOtC,KAAA,CAAAgB,aAAA,CAACZ,OAAO;MAACuC,GAAG,EAAEJ,GAAI;MAAChC,WAAW,EAAEiC,MAAO;MAAAvB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CAAC;EACpD,CAAC,CAED,CAAC;AAET;AAEA,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}