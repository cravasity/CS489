{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\nvar _utils = require(\"./utils\");\nfunction toBeEmptyDOMElement(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmptyDOMElement`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}\n\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * â„¹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\nfunction isEmptyElement(element) {\n  const nonCommentChildNodes = [...element.childNodes].filter(node => node.nodeType !== 8);\n  return nonCommentChildNodes.length === 0;\n}","map":null,"metadata":{},"sourceType":"script"}