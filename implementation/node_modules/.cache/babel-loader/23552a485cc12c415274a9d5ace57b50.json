{"ast":null,"code":"var _jsxFileName = \"/Users/juhyun/cs489/factdect/src/Publisher.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nconst Detail = props => {\n  const row = props.row;\n  const title = row.title;\n  const number = props.numbers;\n  const publisher = number.publisher;\n  const data_num = number.data_num;\n  const fact_num = number.fact_num;\n  const conv_num = number.conv_num;\n  const false_num = number.false_num;\n  const fact_percent = number.fact;\n  const conv_percent = number.conv;\n  const false_percent = number.false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, publisher));\n};\nfunction Publisher() {\n  let location = useLocation();\n  {/* 이 페이지에 전달된 정보를 받겠다는 코드입니다 */}\n  {/* 아래 publisher 변수에는 Rank 페이지에서 클릭한 줄의 \"출판사\" 값이 전달됩니다. */}\n  const publisher = location.state.publisher;\n  {/* 정보가 dictionary 꼴로 전달된다고 생각하시면 편할 듯 합니다. { state : {key: value}} 형태로 data가 전달되기 때문에 알짜배기 데이터 값은 location.state.key에 저장됩니다. */}\n  const [rows, setRow] = useState(null);\n  const [numbers, setNumbers] = useState(null);\n  useEffect(() => {\n    axios.get('/get', {\n      params: {\n        input_pub: publisher\n      }\n    }).then(({\n      data\n    }) => {\n      setRow(data);\n    }).catch(e => {\n      console.error(e.stack);\n    });\n    axios.get('/pub-info', {\n      params: {\n        input_pub: publisher\n      }\n    }).then(({\n      data\n    }) => {\n      setNumbers(data);\n    }).catch(e => {\n      console.error(e.stack);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Publisher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, rows && rows.map((v, inx) => {\n    const json_r = JSON.parse(v);\n    const json_n = JSON.parse(numbers);\n    return /*#__PURE__*/React.createElement(Detail, {\n      key: inx,\n      row: json_r,\n      numbers: json_n,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }\n    });\n  }));\n}\nexport default Publisher;","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","Detail","props","row","title","number","numbers","publisher","data_num","fact_num","conv_num","false_num","fact_percent","fact","conv_percent","conv","false_percent","false","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Publisher","location","state","rows","setRow","setNumbers","get","params","input_pub","then","data","catch","e","console","error","stack","map","v","inx","json_r","JSON","parse","json_n","key"],"sources":["/Users/juhyun/cs489/factdect/src/Publisher.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nconst Detail = (props) => {\n    const row = props.row;\n    const title = row.title;\n    const number = props.numbers;\n    const publisher = number.publisher;\n    const data_num = number.data_num;\n    const fact_num = number.fact_num;\n    const conv_num = number.conv_num;\n    const false_num = number.false_num;\n    const fact_percent = number.fact;\n    const conv_percent = number.conv;\n    const false_percent = number.false;\n\n    return (\n      <div className=\"Detail\">\n        <div>{publisher}</div>\n      </div>\n    )\n}\n\nfunction Publisher() {\n    let location = useLocation(); {/* 이 페이지에 전달된 정보를 받겠다는 코드입니다 */}\n    {/* 아래 publisher 변수에는 Rank 페이지에서 클릭한 줄의 \"출판사\" 값이 전달됩니다. */}\n    const publisher = location.state.publisher; {/* 정보가 dictionary 꼴로 전달된다고 생각하시면 편할 듯 합니다. { state : {key: value}} 형태로 data가 전달되기 때문에 알짜배기 데이터 값은 location.state.key에 저장됩니다. */}\n\n    const [rows, setRow] = useState(null);\n    const [numbers, setNumbers] = useState(null);\n\n    useEffect(() => {\n      axios.get('/get', {\n        params: {input_pub: publisher}\n      })\n      .then(({data}) => {\n          setRow(data);\n      })\n      .catch(e => {\n          console.error(e.stack);\n      });\n\n      axios.get('/pub-info', {\n        params: {input_pub: publisher}\n      })\n      .then(({data}) => {\n          setNumbers(data);\n      })\n      .catch(e => {\n          console.error(e.stack);\n      });\n\n    }, []);\n    return (\n      <div className=\"Publisher\">\n        {\n        rows && rows.map((v, inx) => {\n            const json_r = JSON.parse(v)\n            const json_n = JSON.parse(numbers)\n            return <Detail key={inx} row={json_r} numbers={json_n}/>\n        })\n    }\n      </div>\n    );\n  }\n  \n  export default Publisher;"],"mappings":"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"},"metadata":{},"sourceType":"module"}