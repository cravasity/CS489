{"ast":null,"code":"function $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {\n    value: true,\n    configurable: true\n  });\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $009ddb00d3ec72b8$exports = {};\n$parcel$defineInteropFlag($009ddb00d3ec72b8$exports);\n$parcel$export($009ddb00d3ec72b8$exports, \"default\", () => $009ddb00d3ec72b8$export$2e2bcd8739ae039);\nclass $009ddb00d3ec72b8$export$2e2bcd8739ae039 extends Error {\n  constructor(filename, msg, lineno, column, css) {\n    super(filename + \":\" + lineno + \":\" + column + \": \" + msg);\n    this.reason = msg;\n    this.filename = filename;\n    this.line = lineno;\n    this.column = column;\n    this.source = css;\n  }\n}\nvar $0865a9fb4cc365fe$exports = {};\n$parcel$defineInteropFlag($0865a9fb4cc365fe$exports);\n$parcel$export($0865a9fb4cc365fe$exports, \"default\", () => $0865a9fb4cc365fe$export$2e2bcd8739ae039);\n/**\n * Store position information for a node\n */\nclass $0865a9fb4cc365fe$export$2e2bcd8739ae039 {\n  constructor(start, end, source) {\n    this.start = start;\n    this.end = end;\n    this.source = source;\n  }\n}\nvar $b2e137848b48cf4f$exports = {};\n$parcel$export($b2e137848b48cf4f$exports, \"CssTypes\", () => $b2e137848b48cf4f$export$9be5dd6e61d5d73a);\nvar $b2e137848b48cf4f$export$9be5dd6e61d5d73a;\n(function (CssTypes) {\n  CssTypes[\"stylesheet\"] = \"stylesheet\";\n  CssTypes[\"rule\"] = \"rule\";\n  CssTypes[\"declaration\"] = \"declaration\";\n  CssTypes[\"comment\"] = \"comment\";\n  CssTypes[\"container\"] = \"container\";\n  CssTypes[\"charset\"] = \"charset\";\n  CssTypes[\"document\"] = \"document\";\n  CssTypes[\"customMedia\"] = \"custom-media\";\n  CssTypes[\"fontFace\"] = \"font-face\";\n  CssTypes[\"host\"] = \"host\";\n  CssTypes[\"import\"] = \"import\";\n  CssTypes[\"keyframes\"] = \"keyframes\";\n  CssTypes[\"keyframe\"] = \"keyframe\";\n  CssTypes[\"layer\"] = \"layer\";\n  CssTypes[\"media\"] = \"media\";\n  CssTypes[\"namespace\"] = \"namespace\";\n  CssTypes[\"page\"] = \"page\";\n  CssTypes[\"supports\"] = \"supports\";\n})($b2e137848b48cf4f$export$9be5dd6e61d5d73a || ($b2e137848b48cf4f$export$9be5dd6e61d5d73a = {}));\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\n// New rule => https://www.w3.org/TR/CSS22/syndata.html#comments\n// [^] is equivalent to [.\\n\\r]\nconst $d708735ed1303b43$var$commentre = /\\/\\*[^]*?(?:\\*\\/|$)/g;\nconst $d708735ed1303b43$export$98e6a39c04603d36 = (css, options) => {\n  options = options || {};\n  /**\n  * Positional.\n  */\n  let lineno = 1;\n  let column = 1;\n  /**\n  * Update lineno and column based on `str`.\n  */\n  function updatePosition(str) {\n    const lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    const i = str.lastIndexOf(\"\\n\");\n    column = ~i ? str.length - i : column + str.length;\n  }\n  /**\n  * Mark position and patch `node.position`.\n  */\n  function position() {\n    const start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new (0, $0865a9fb4cc365fe$export$2e2bcd8739ae039)(start, {\n        line: lineno,\n        column: column\n      }, options?.source || \"\");\n      whitespace();\n      return node;\n    };\n  }\n  /**\n  * Error `msg`.\n  */\n  const errorsList = [];\n  function error(msg) {\n    const err = new (0, $009ddb00d3ec72b8$export$2e2bcd8739ae039)(options?.source || \"\", msg, lineno, column, css);\n    if (options?.silent) errorsList.push(err);else throw err;\n  }\n  /**\n  * Parse stylesheet.\n  */\n  function stylesheet() {\n    const rulesList = rules();\n    const result = {\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet,\n      stylesheet: {\n        source: options?.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n    return result;\n  }\n  /**\n  * Opening brace.\n  */\n  function open() {\n    return match(/^{\\s*/);\n  }\n  /**\n  * Closing brace.\n  */\n  function close() {\n    return match(/^}/);\n  }\n  /**\n  * Parse ruleset.\n  */\n  function rules() {\n    let node;\n    const rules = [];\n    whitespace();\n    comments(rules);\n    while (css.length && css.charAt(0) !== \"}\" && (node = atrule() || rule())) if (node) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n  /**\n  * Match `re` and return captures.\n  */\n  function match(re) {\n    const m = re.exec(css);\n    if (!m) return;\n    const str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  /**\n  * Parse whitespace.\n  */\n  function whitespace() {\n    match(/^\\s*/);\n  }\n  /**\n  * Parse comments;\n  */\n  function comments(rules) {\n    let c;\n    rules = rules || [];\n    while (c = comment()) if (c) rules.push(c);\n    return rules;\n  }\n  /**\n  * Parse comment.\n  */\n  function comment() {\n    const pos = position();\n    if (\"/\" !== css.charAt(0) || \"*\" !== css.charAt(1)) return;\n    const m = match(/^\\/\\*[^]*?\\*\\//);\n    if (!m) return error(\"End of comment missing\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment,\n      comment: m[0].slice(2, -2)\n    });\n  }\n  /**\n  * Parse selector.\n  */\n  function selector() {\n    const m = match(/^([^{]+)/);\n    if (!m) return;\n    // remove comment in selector;\n    const res = $d708735ed1303b43$var$trim(m[0]).replace($d708735ed1303b43$var$commentre, \"\");\n    // Optimisation: If there is no ',' no need to split or post-process (this is less costly)\n    if (res.indexOf(\",\") === -1) return [res];\n    return res /**\n               * replace ',' by \\u200C for data selector (div[data-lang=\"fr,de,us\"])\n               * replace ',' by \\u200C for nthChild and other selector (div:nth-child(2,3,4))\n               *\n               * Examples:\n               * div[data-lang=\"fr,\\\"de,us\"]\n               * div[data-lang='fr,\\'de,us']\n               * div:matches(.toto, .titi:matches(.toto, .titi))\n               *\n               * Regex logic:\n               *  (\"|')(?:\\\\\\1|.)*?\\1 => Handle the \" and '\n               *  \\(.*?\\)  => Handle the ()\n               *\n               * Optimization 1:\n               * No greedy capture (see docs about the difference between .* and .*?)\n               *\n               * Optimization 2:\n               * (\"|')(?:\\\\\\1|.)*?\\1 this use reference to capture group, it work faster.\n               */.replace(/(\"|')(?:\\\\\\1|.)*?\\1|\\(.*?\\)/g, m => m.replace(/,/g, \"â€Œ\")) // Split the selector by ','\n    .split(\",\") // Replace back \\u200C by ','\n    .map(s => {\n      return $d708735ed1303b43$var$trim(s.replace(/\\u200C/g, \",\"));\n    });\n  }\n  /**\n  * Parse declaration.\n  */\n  function declaration() {\n    const pos = position();\n    // prop\n    const propMatch = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!propMatch) return;\n    const propValue = $d708735ed1303b43$var$trim(propMatch[0]);\n    // :\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\");\n    // val\n    const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/);\n    const ret = pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration,\n      property: propValue.replace($d708735ed1303b43$var$commentre, \"\"),\n      value: val ? $d708735ed1303b43$var$trim(val[0]).replace($d708735ed1303b43$var$commentre, \"\") : \"\"\n    });\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n  /**\n  * Parse declarations.\n  */\n  function declarations() {\n    const decls = [];\n    if (!open()) return error(\"missing '{'\");\n    comments(decls);\n    // declarations\n    let decl;\n    while (decl = declaration()) if (decl) {\n      decls.push(decl);\n      comments(decls);\n    }\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n  /**\n  * Parse keyframe.\n  */\n  function keyframe() {\n    let m;\n    const vals = [];\n    const pos = position();\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n    if (!vals.length) return;\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe,\n      values: vals,\n      declarations: declarations() || []\n    });\n  }\n  /**\n  * Parse keyframes.\n  */\n  function atkeyframes() {\n    const pos = position();\n    const m1 = match(/^@([-\\w]+)?keyframes\\s*/);\n    if (!m1) return;\n    const vendor = m1[1];\n    // identifier\n    const m2 = match(/^([-\\w]+)\\s*/);\n    if (!m2) return error(\"@keyframes missing name\");\n    const name = m2[1];\n    if (!open()) return error(\"@keyframes missing '{'\");\n    let frame;\n    let frames = comments();\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n    if (!close()) return error(\"@keyframes missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes,\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n  /**\n  * Parse supports.\n  */\n  function atsupports() {\n    const pos = position();\n    const m = match(/^@supports *([^{]+)/);\n    if (!m) return;\n    const supports = $d708735ed1303b43$var$trim(m[1]);\n    if (!open()) return error(\"@supports missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@supports missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports,\n      supports: supports,\n      rules: style\n    });\n  }\n  /**\n  * Parse host.\n  */\n  function athost() {\n    const pos = position();\n    const m = match(/^@host\\s*/);\n    if (!m) return;\n    if (!open()) return error(\"@host missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@host missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host,\n      rules: style\n    });\n  }\n  /**\n  * Parse container.\n  */\n  function atcontainer() {\n    const pos = position();\n    const m = match(/^@container *([^{]+)/);\n    if (!m) return;\n    const container = $d708735ed1303b43$var$trim(m[1]);\n    if (!open()) return error(\"@container missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@container missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container,\n      container: container,\n      rules: style\n    });\n  }\n  /**\n  * Parse container.\n  */\n  function atlayer() {\n    const pos = position();\n    const m = match(/^@layer *([^{;@]+)/);\n    if (!m) return;\n    const layer = $d708735ed1303b43$var$trim(m[1]);\n    if (!open()) {\n      match(/^[;\\s]*/);\n      return pos({\n        type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n        layer: layer\n      });\n    }\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@layer missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer,\n      layer: layer,\n      rules: style\n    });\n  }\n  /**\n  * Parse media.\n  */\n  function atmedia() {\n    const pos = position();\n    const m = match(/^@media *([^{]+)/);\n    if (!m) return;\n    const media = $d708735ed1303b43$var$trim(m[1]);\n    if (!open()) return error(\"@media missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@media missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media,\n      media: media,\n      rules: style\n    });\n  }\n  /**\n  * Parse custom-media.\n  */\n  function atcustommedia() {\n    const pos = position();\n    const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) return;\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia,\n      name: $d708735ed1303b43$var$trim(m[1]),\n      media: $d708735ed1303b43$var$trim(m[2])\n    });\n  }\n  /**\n  * Parse paged media.\n  */\n  function atpage() {\n    const pos = position();\n    const m = match(/^@page */);\n    if (!m) return;\n    const sel = selector() || [];\n    if (!open()) return error(\"@page missing '{'\");\n    let decls = comments();\n    // declarations\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) return error(\"@page missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page,\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  /**\n  * Parse document.\n  */\n  function atdocument() {\n    const pos = position();\n    const m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n    const vendor = $d708735ed1303b43$var$trim(m[1]);\n    const doc = $d708735ed1303b43$var$trim(m[2]);\n    if (!open()) return error(\"@document missing '{'\");\n    const style = comments().concat(rules());\n    if (!close()) return error(\"@document missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document,\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n  /**\n  * Parse font-face.\n  */\n  function atfontface() {\n    const pos = position();\n    const m = match(/^@font-face\\s*/);\n    if (!m) return;\n    if (!open()) return error(\"@font-face missing '{'\");\n    let decls = comments();\n    // declarations\n    let decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n    if (!close()) return error(\"@font-face missing '}'\");\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace,\n      declarations: decls\n    });\n  }\n  /**\n  * Parse import\n  */\n  const atimport = _compileAtrule(\"import\");\n  /**\n  * Parse charset\n  */\n  const atcharset = _compileAtrule(\"charset\");\n  /**\n  * Parse namespace\n  */\n  const atnamespace = _compileAtrule(\"namespace\");\n  /**\n  * Parse non-block at-rules\n  */\n  function _compileAtrule(name) {\n    const re = new RegExp(\"^@\" + name + \"\\\\s*((?::?[^;'\\\"]|\\\"(?:\\\\\\\\\\\"|[^\\\"])*?\\\"|'(?:\\\\\\\\'|[^'])*?')+)(?:;|$)\");\n    // ^@import\\s*([^;\"']|(\"|')(?:\\\\\\2|.)*?\\2)+(;|$)\n    return function () {\n      const pos = position();\n      const m = match(re);\n      if (!m) return;\n      const ret = {\n        type: name\n      };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n  /**\n  * Parse at rule.\n  */\n  function atrule() {\n    if (css[0] !== \"@\") return;\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface() || atcontainer() || atlayer();\n  }\n  /**\n  * Parse rule.\n  */\n  function rule() {\n    const pos = position();\n    const sel = selector();\n    if (!sel) return error(\"selector missing\");\n    comments();\n    return pos({\n      type: (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule,\n      selectors: sel,\n      declarations: declarations() || []\n    });\n  }\n  return $d708735ed1303b43$var$addParent(stylesheet());\n};\n/**\n * Trim `str`.\n */\nfunction $d708735ed1303b43$var$trim(str) {\n  return str ? str.trim() : \"\";\n}\n/**\n * Adds non-enumerable parent node reference to each node.\n */\nfunction $d708735ed1303b43$var$addParent(obj, parent) {\n  const isNode = obj && typeof obj.type === \"string\";\n  const childParent = isNode ? obj : parent;\n  for (const k in obj) {\n    const value = obj[k];\n    if (Array.isArray(value)) value.forEach(v => {\n      $d708735ed1303b43$var$addParent(v, childParent);\n    });else if (value && typeof value === \"object\") $d708735ed1303b43$var$addParent(value, childParent);\n  }\n  if (isNode) Object.defineProperty(obj, \"parent\", {\n    configurable: true,\n    writable: true,\n    enumerable: false,\n    value: parent || null\n  });\n  return obj;\n}\nvar $d708735ed1303b43$export$2e2bcd8739ae039 = $d708735ed1303b43$export$98e6a39c04603d36;\nclass $de9540138ed1fd01$var$Compiler {\n  constructor(options) {\n    this.level = 0;\n    this.indentation = \"  \";\n    this.compress = false;\n    if (typeof options?.indent === \"string\") this.indentation = options?.indent;\n    if (options?.compress) this.compress = true;\n  }\n  // We disable no-unused-vars for _position. We keep position for potential reintroduction of source-map\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  emit(str, _position) {\n    return str;\n  }\n  /**\n  * Increase, decrease or return current indentation.\n  */\n  indent(level) {\n    this.level = this.level || 1;\n    if (level) {\n      this.level += level;\n      return \"\";\n    }\n    return Array(this.level).join(this.indentation);\n  }\n  visit(node) {\n    switch (node.type) {\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).stylesheet:\n        return this.stylesheet(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).rule:\n        return this.rule(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).declaration:\n        return this.declaration(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).comment:\n        return this.comment(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).container:\n        return this.container(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).charset:\n        return this.charset(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).document:\n        return this.document(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).customMedia:\n        return this.customMedia(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).fontFace:\n        return this.fontFace(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).host:\n        return this.host(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).import:\n        return this.import(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframes:\n        return this.keyframes(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).keyframe:\n        return this.keyframe(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).layer:\n        return this.layer(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).media:\n        return this.media(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).namespace:\n        return this.namespace(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).page:\n        return this.page(node);\n      case (0, $b2e137848b48cf4f$export$9be5dd6e61d5d73a).supports:\n        return this.supports(node);\n    }\n  }\n  mapVisit(nodes, delim) {\n    let buf = \"\";\n    delim = delim || \"\";\n    for (let i = 0, length = nodes.length; i < length; i++) {\n      buf += this.visit(nodes[i]);\n      if (delim && i < length - 1) buf += this.emit(delim);\n    }\n    return buf;\n  }\n  compile(node) {\n    if (this.compress) return node.stylesheet.rules.map(this.visit, this).join(\"\");\n    return this.stylesheet(node);\n  }\n  /**\n  * Visit stylesheet node.\n  */\n  stylesheet(node) {\n    return this.mapVisit(node.stylesheet.rules, \"\\n\\n\");\n  }\n  /**\n  * Visit comment node.\n  */\n  comment(node) {\n    if (this.compress) return this.emit(\"\", node.position);\n    return this.emit(this.indent() + \"/*\" + node.comment + \"*/\", node.position);\n  }\n  /**\n  * Visit container node.\n  */\n  container(node) {\n    if (this.compress) return this.emit(\"@container \" + node.container, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n    return this.emit(this.indent() + \"@container \" + node.container, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n  }\n  /**\n  * Visit container node.\n  */\n  layer(node) {\n    if (this.compress) return this.emit(\"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\") : \";\");\n    return this.emit(this.indent() + \"@layer \" + node.layer, node.position) + (node.rules ? this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\") : \";\");\n  }\n  /**\n  * Visit import node.\n  */\n  import(node) {\n    return this.emit(\"@import \" + node.import + \";\", node.position);\n  }\n  /**\n  * Visit media node.\n  */\n  media(node) {\n    if (this.compress) return this.emit(\"@media \" + node.media, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n    return this.emit(this.indent() + \"@media \" + node.media, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n  }\n  /**\n  * Visit document node.\n  */\n  document(node) {\n    const doc = \"@\" + (node.vendor || \"\") + \"document \" + node.document;\n    if (this.compress) return this.emit(doc, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n    return this.emit(doc, node.position) + this.emit(\"  {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n  }\n  /**\n  * Visit charset node.\n  */\n  charset(node) {\n    return this.emit(\"@charset \" + node.charset + \";\", node.position);\n  }\n  /**\n  * Visit namespace node.\n  */\n  namespace(node) {\n    return this.emit(\"@namespace \" + node.namespace + \";\", node.position);\n  }\n  /**\n  * Visit supports node.\n  */\n  supports(node) {\n    if (this.compress) return this.emit(\"@supports \" + node.supports, node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n    return this.emit(this.indent() + \"@supports \" + node.supports, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(\"\\n\" + this.indent(-1) + this.indent() + \"}\");\n  }\n  /**\n  * Visit keyframes node.\n  */\n  keyframes(node) {\n    if (this.compress) return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\"{\") + this.mapVisit(node.keyframes) + this.emit(\"}\");\n    return this.emit(\"@\" + (node.vendor || \"\") + \"keyframes \" + node.name, node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.keyframes, \"\\n\") + this.emit(this.indent(-1) + \"}\");\n  }\n  /**\n  * Visit keyframe node.\n  */\n  keyframe(node) {\n    const decls = node.declarations;\n    if (this.compress) return this.emit(node.values.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n    return this.emit(this.indent()) + this.emit(node.values.join(\", \"), node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1) + \"\\n\" + this.indent() + \"}\\n\");\n  }\n  /**\n  * Visit page node.\n  */\n  page(node) {\n    if (this.compress) {\n      const sel = node.selectors.length ? node.selectors.join(\", \") : \"\";\n      return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n    }\n    const sel = node.selectors.length ? node.selectors.join(\", \") + \" \" : \"\";\n    return this.emit(\"@page \" + sel, node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n  }\n  /**\n  * Visit font-face node.\n  */\n  fontFace(node) {\n    if (this.compress) return this.emit(\"@font-face\", node.position) + this.emit(\"{\") + this.mapVisit(node.declarations) + this.emit(\"}\");\n    return this.emit(\"@font-face \", node.position) + this.emit(\"{\\n\") + this.emit(this.indent(1)) + this.mapVisit(node.declarations, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n}\");\n  }\n  /**\n  * Visit host node.\n  */\n  host(node) {\n    if (this.compress) return this.emit(\"@host\", node.position) + this.emit(\"{\") + this.mapVisit(node.rules) + this.emit(\"}\");\n    return this.emit(\"@host\", node.position) + this.emit(\" {\\n\" + this.indent(1)) + this.mapVisit(node.rules, \"\\n\\n\") + this.emit(this.indent(-1) + \"\\n}\");\n  }\n  /**\n  * Visit custom-media node.\n  */\n  customMedia(node) {\n    return this.emit(\"@custom-media \" + node.name + \" \" + node.media + \";\", node.position);\n  }\n  /**\n  * Visit rule node.\n  */\n  rule(node) {\n    const decls = node.declarations;\n    if (!decls.length) return \"\";\n    if (this.compress) return this.emit(node.selectors.join(\",\"), node.position) + this.emit(\"{\") + this.mapVisit(decls) + this.emit(\"}\");\n    const indent = this.indent();\n    return this.emit(node.selectors.map(s => {\n      return indent + s;\n    }).join(\",\\n\"), node.position) + this.emit(\" {\\n\") + this.emit(this.indent(1)) + this.mapVisit(decls, \"\\n\") + this.emit(this.indent(-1)) + this.emit(\"\\n\" + this.indent() + \"}\");\n  }\n  /**\n  * Visit declaration node.\n  */\n  declaration(node) {\n    if (this.compress) return this.emit(node.property + \":\" + node.value, node.position) + this.emit(\";\");\n    return this.emit(this.indent()) + this.emit(node.property + \": \" + node.value, node.position) + this.emit(\";\");\n  }\n}\nvar $de9540138ed1fd01$export$2e2bcd8739ae039 = $de9540138ed1fd01$var$Compiler;\nvar $fdf773ab87e20450$export$2e2bcd8739ae039 = (node, options) => {\n  const compiler = new (0, $de9540138ed1fd01$export$2e2bcd8739ae039)(options || {});\n  return compiler.compile(node);\n};\nconst $149c1bd638913645$export$98e6a39c04603d36 = (0, $d708735ed1303b43$export$2e2bcd8739ae039);\nconst $149c1bd638913645$export$fac44ee5b035f737 = (0, $fdf773ab87e20450$export$2e2bcd8739ae039);\nvar $149c1bd638913645$export$2e2bcd8739ae039 = {\n  parse: $149c1bd638913645$export$98e6a39c04603d36,\n  stringify: $149c1bd638913645$export$fac44ee5b035f737\n};\nexport { $149c1bd638913645$export$98e6a39c04603d36 as parse, $149c1bd638913645$export$fac44ee5b035f737 as stringify, $149c1bd638913645$export$2e2bcd8739ae039 as default, $b2e137848b48cf4f$export$9be5dd6e61d5d73a as CssTypes };","map":null,"metadata":{},"sourceType":"module"}