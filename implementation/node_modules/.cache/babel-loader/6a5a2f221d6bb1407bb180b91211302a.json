{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveDescription = toHaveDescription;\nvar _utils = require(\"./utils\");\n// See algoritm: https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\nfunction toHaveDescription(htmlElement, checkWith) {\n  (0, _utils.deprecate)('toHaveDescription', 'Please use toHaveAccessibleDescription.');\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveDescription, this);\n  const expectsDescription = checkWith !== undefined;\n  const descriptionIDRaw = htmlElement.getAttribute('aria-describedby') || '';\n  const descriptionIDs = descriptionIDRaw.split(/\\s+/).filter(Boolean);\n  let description = '';\n  if (descriptionIDs.length > 0) {\n    const document = htmlElement.ownerDocument;\n    const descriptionEls = descriptionIDs.map(descriptionID => document.getElementById(descriptionID)).filter(Boolean);\n    description = (0, _utils.normalize)(descriptionEls.map(el => el.textContent).join(' '));\n  }\n  return {\n    pass: expectsDescription ? checkWith instanceof RegExp ? checkWith.test(description) : this.equals(description, checkWith) : Boolean(description),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveDescription`, 'element', ''), `Expected the element ${to} have description`, this.utils.printExpected(checkWith), 'Received', this.utils.printReceived(description));\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}